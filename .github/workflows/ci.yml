---
name: CI

'on':
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  test:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y zsh

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install coreutils

    - name: Test dircolors version
      run: |
        if [[ "${OSTYPE}" == "darwin"* ]]; then
          gdircolors --version
        else
          dircolors --version
        fi

    - name: Test plugin loading with different themes
      run: |
        for theme in "256dark" "ansi-universal" "ansi-dark" "ansi-light"; do
          echo "Testing theme: ${theme}"
          if ! DIRCOLORS_SOLARIZED_ZSH_THEME="${theme}" zsh -c "source ./dircolors-solarized-zsh.plugin.zsh"; then
            echo "Failed to load theme: ${theme}"
            exit 1
          fi
        done

    - name: Test color output
      run: |
        DIRCOLORS_SOLARIZED_ZSH_THEME="256dark" zsh -c '
          source ./dircolors-solarized-zsh.plugin.zsh

          # Change to temporary directory
          cd "${{ runner.temp }}" || { echo "Failed to change directory"; exit 1; }

          # Create test files and directories
          mkdir test_dir
          touch test_dir/regular_file
          touch test_dir/regular_file_executable
          chmod +x test_dir/regular_file_executable
          mkdir test_dir/directory
          ln -s regular_file test_dir/symlink

          # Test ls color output
          if [[ "${OSTYPE}" == "darwin"* ]]; then
            gls --color=always test_dir
          else
            ls --color=always test_dir
          fi
        '
